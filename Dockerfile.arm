FROM shg_mud_builder:margarita as builder

FROM alpine:latest as alpinebase
RUN mkdir -p /lib64
RUN export http_proxy='http://cacher.sandelman.ca:3142/'; apk add bash sqlite sqlite-libs procps libstdc++

COPY --from=builder /usr/local/lib/ /usr/local/lib
COPY --from=builder /usr/local/bin/ /usr/local/bin
COPY --from=builder /usr/local/rvm/ /usr/local/rvm
COPY --from=builder /etc/profile.d/ /etc/profile.d
COPY --from=builder /usr/lib/libcrypto.so.* /usr/lib/
COPY --from=builder /lib/libcrypto.so.* /lib/
COPY --from=builder /usr/lib/libssl.so.* /usr/lib/
COPY --from=builder /lib/libssl.so.* /lib/
COPY --from=builder /usr/lib/libpq.so.* /usr/lib/
COPY --from=builder /usr/lib/liblber-2.4.so.2 /usr/lib/libsasl2.so.3 /usr/lib/libldap_r-2.4.so.2 /usr/lib/
COPY --from=builder /app /app
COPY . /app/fountain
RUN rm -rf /app/fountain/.git

RUN export http_proxy='http://cacher.sandelman.ca:3142/'; apk add shadow
RUN useradd -d /app/fountain -r -u 998 fountain
ENV RAILS_ENV=production
ENV CERTDIR=/app/certificates

WORKDIR /app/fountain
# Add a script to be executed every time the container starts.
COPY ./docker/entrypoint.sh /root/start
RUN chmod +x /root/start
COPY ./docker/config/database.yml /app/fountain/config
RUN chown -R fountain /app
RUN mkdir -p /app/database /app/certificates
ENTRYPOINT ["/root/start"]

RUN RAILS_ENV=production /usr/local/rvm/bin/rvm 2.6.1 do bundle exec rake db:migrate
RUN chmod +x /usr/bin/entrypoint.sh
EXPOSE 3000
EXPOSE 443

CMD ["/usr/local/rvm/bin/rvm 2.6.1 do /app/fountain/startjrc --address 0.0.0.0"]
