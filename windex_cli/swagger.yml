openapi: 3.0.0
info:
  description: 'CIRALabs SecureHomeGateway Windex API: between smartphone and router'
  version: "1.0.0-current"
  title: CIRA SHG Windex API
  termsOfService: 'https://securehomegateway.ca/windex/tos/'
  contact:
    email: securehomegateway@cira.ca
  license:
    name: (????)
tags:
  - name: device
    description: Everything about your devices
  - name: device-type
    description: Operations on device type
  - name: user
    description: Operations about user
servers:
  - url: 'https://mud.nXXXXXX.router.securehomegateway.ca/api/1.0'
paths:
  /devices:
    post:
      tags:
        - device
      summary: Add a new device to the store
      operationId: createDevice
      requestBody:
        $ref: '#/components/requestBodies/Device'
      responses:
        201:
          $ref: '#/components/responses/Created'
        400:
          $ref: '#/components/responses/InvalidRequest'
        403:
          $ref: '#/components/responses/Unauthorized'
        409:
          description: Device with the same MAC address already exists
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponse'
    get:
      tags:
        - device
      summary: List devices
      operationId: listDevices
      responses:
        200:
          description: Device info
          content:
            application/json:
              schema:
                type: object
                properties:
                  devices:
                    type: array
                    items:
                      $ref: '#/components/schemas/Device'
        400:
          $ref: '#/components/responses/InvalidRequest'
        403:
          $ref: '#/components/responses/Unauthorized'
  /devices/{id}:
    get:
      tags:
        - device
      summary: Get a device information
      operationId: getDevice
      parameters:
        - $ref: '#/components/parameters/ObjectId'
      responses:
        200:
          description: Device info
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Device'
        400:
          $ref: '#/components/responses/InvalidRequest'
        403:
          $ref: '#/components/responses/Unauthorized'
    put:
      tags:
        - device
      summary: Update an existing device
      operationId: updateDevice
      parameters:
          - $ref: '#/components/parameters/ObjectId'
      requestBody:
        $ref: '#/components/requestBodies/Device'
      responses:
        200:
          description: Device updated
        400:
          $ref: '#/components/responses/InvalidRequest'
        403:
          $ref: '#/components/responses/Unauthorized'
        404:
          $ref: '#/components/responses/NotFound'
  /administrators:
    post:
      tags:
        - user
      summary: Create user
      description: This can only be done by the logged in administrator or user.
      operationId: createUser
      requestBody:
        $ref: '#/components/requestBodies/User'
      responses:
        201:
          $ref: '#/components/responses/Created'
        400:
          $ref: '#/components/responses/InvalidRequest'
        403:
          $ref: '#/components/responses/Unauthorized'
        409:
          description: User with already exists  # TODO which criteria
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponse'
    get:
      tags:
        - user
      summary: List users
      operationId: listUsers
      responses:
        200:
          description: User info
          content:
            application/json:
              schema:
                type: object
                properties:
                  administrators:
                    type: array
                    items:
                      $ref: '#/components/schemas/User'
        400:
          $ref: '#/components/responses/InvalidRequest'
        403:
          $ref: '#/components/responses/Unauthorized'
  '/administrators/{id}':
    get:
      tags:
        - user
      summary: Get user by user id
      operationId: getUser
      parameters:
        - $ref: '#/components/parameters/ObjectId'
      responses:
        200:
          description: User info
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
        400:
          $ref: '#/components/responses/InvalidRequest'
        403:
          $ref: '#/components/responses/Unauthorized'
        404:
          $ref: '#/components/responses/NotFound'
    put:
      tags:
        - user
      summary: Update an existing user
      operationId: updateUser
      parameters:
          - $ref: '#/components/parameters/ObjectId'
      requestBody:
        $ref: '#/components/requestBodies/User'
      responses:
        200:
          description: User sucessfully updated
        400:
          $ref: '#/components/responses/InvalidRequest'
        403:
          $ref: '#/components/responses/Unauthorized'
        404:
          $ref: '#/components/responses/NotFound'
components:
  requestBodies:
    Device:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/DeviceBody'
      description: Device object
      required: true
    User:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/UserBody'
      description: User object
      required: true
  parameters:
    ObjectId:
      name: id
      in: path
      description: ID of the device
      required: true
      schema:
        $ref: '#/components/schemas/ObjectId'
  schemas:
    ObjectId:
      type: integer
      format: uuid
    DeviceBody:
      type: object
      properties:
        name:
          type: string
          description: Name of the device if available
        fqdn:
          type: string
          format: url
        eui64:
          type: string
        created_at:
          type: string
          format: date-time
          description: Device creation datetime
          nullable: false
        updated_at:
          type: string
          format: date-time
          description: Device last update datetime
          nullable: false
        device_type_id:
          $ref: '#/components/schemas/ObjectId'
        manufacturer_id:
          $ref: '#/components/schemas/ObjectId'
        idev_id:
          type: string
        traffic_counts:
          type: object
          properties:
            bytes:
              type: array
              items:
                type: integer
            packets:
              type: array
              items:
                type: integer
        mud_url:
          type: string
          format: url
        profile_id:
          $ref: '#/components/schemas/ObjectId'
        current_vlan:
          type: string
        wan_enabled:
          type: boolean
        lan_enabled:
          type: boolean
        firewall_rules:
          type: array
          items:
            type: object
        firewall_rule_names:
          type: array
          items:
            type: object
        deleted:
          type: boolean
          default: false
        quaranteed:
          type: boolean
        device_enabled:
          type: boolean
        device_state:
          type: string
        failure_details:
          type: object
        ipv4:
          type: string
        ipv6:
          type: string
        acp_prefix:
          type: string
        idevid_hash:
          type: string
        ldevid:
          type: string
        ldevid_hash:
          type: string
    Device:
      type: object
      properties:
        device:
          $ref: '#/components/schemas/DeviceJson'
    DeviceJson:
      allOf:
        - $ref: '#/components/schemas/DeviceBody'
        - type: object
          properties:
            id:
              $ref: '#/components/schemas/ObjectId'
    UserBody:
      type: object
      properties:
        name:
          type: string
          description: Username
        admin:
          type: boolean
          description: Whether user has admin rights
          default: false
        enabled:
          type: boolean
          description: Whether user is enabled
          default: false
        prospective:
          type: boolean
          default: true
        public_key:
          type: string
#          format: binary
        previous_public_key:
          type: string
#          format: binary
        last_login:
          type: string
          format: date-time
          description: Last login datetime
        first_login:
          type: string
          format: date-time
          description: First login datetime
        last_login_ip:
          oneOf:
            - type: string
              format: ipv4
            - type: string
              format: ipv6
        created_at:
          type: string
          format: date-time
          description: User creation datetime
          nullable: false
        updated_at:
          type: string
          format: date-time
          description: User last update datetime
          nullable: false
    User:
      type: object
      properties:
        administrator:
          $ref: '#/components/schemas/UserJson'
    UserJson:
      allOf:
        - $ref: '#/components/schemas/UserBody'
        - type: object
          properties:
            id:
              $ref: '#/components/schemas/ObjectId'
    ApiResponse:
      type: object
      properties:
        code:
          type: integer
          format: int32
        type:
          type: string
        message:
          type: string
  responses:
    InvalidRequest:
      description: Invalid request
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/ApiResponse'
    Unauthorized:
      description: Unauthorized
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/ApiResponse'
    NotFound:
      description: Object not found
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/ApiResponse'
    Created:
      description: Object created
      headers:
        Location:
          schema:
            type: string
            format: url